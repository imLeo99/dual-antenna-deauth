#include "RF24.h"
#include <SPI.h>
#include "esp_bt.h"
#include "esp_wifi.h"

// HSPI (First NRF24)
SPIClass hspi(HSPI);
// VSPI (Second NRF24)
SPIClass vspi(VSPI);

RF24 radio(16, 15, 16000000);   // HSPI: CE=16, CS=15
RF24 radio1(22, 21, 16000000);  // VSPI: CE=22, CS=21

unsigned int flag = 0;  
unsigned int flagv = 0;  
int ch = 45;   
int ch1 = 45;  

unsigned long lastSwitchTime = 0;  // Time tracker for switching between modes
bool useTwo = true;  // Toggle flag

void two() {
  if (flagv == 0) ch1 += 4;
  else ch1 -= 4;

  if (flag == 0) ch += 2;
  else ch -= 2;

  if (ch1 > 79 && flagv == 0) flagv = 1;
  else if (ch1 < 2 && flagv == 1) flagv = 0;

  if (ch > 79 && flag == 0) flag = 1;
  else if (ch < 2 && flag == 1) flag = 0;

  radio.setChannel(ch);
  radio1.setChannel(ch1);
}

void one() {
  radio1.setChannel(random(80));
  radio.setChannel(random(80));
  delayMicroseconds(random(60));
}

void setup() {
  Serial.begin(115200);
  
  // Disable Bluetooth and WiFi to free resources
  esp_bt_controller_deinit();
  esp_wifi_stop();
  esp_wifi_deinit();
  esp_wifi_disconnect();

  initHP();
  initSP();
}

void initSP() {
  vspi.begin(18, 19, 23, 21);  // VSPI: SCK=18, MISO=19, MOSI=23, CS=21
  if (radio1.begin(&vspi)) {
    Serial.println("SP Started !!!");
    radio1.setAutoAck(false);
    radio1.stopListening();
    radio1.setRetries(0, 0);
    radio1.setPALevel(RF24_PA_MAX, true);
    radio1.setDataRate(RF24_2MBPS);
    radio1.setCRCLength(RF24_CRC_DISABLED);
    radio1.printPrettyDetails();
    radio1.startConstCarrier(RF24_PA_MAX, ch1);
  } else {
    Serial.println("SP couldn't start !!!");
  }
}

void initHP() {
  hspi.begin(14, 12, 13, 15);  // HSPI: SCK=14, MISO=12, MOSI=13, CS=15
  if (radio.begin(&hspi)) {
    Serial.println("HP Started !!!");
    radio.setAutoAck(false);
    radio.stopListening();
    radio.setRetries(0, 0);
    radio.setPALevel(RF24_PA_MAX, true);
    radio.setDataRate(RF24_2MBPS);
    radio.setCRCLength(RF24_CRC_DISABLED);
    radio.printPrettyDetails();
    radio.startConstCarrier(RF24_PA_MAX, ch);
  } else {
    Serial.println("HP couldn't start !!!");
  }
}

void loop() {
  unsigned long currentTime = millis();

  // Switch modes every 3 seconds
  if (currentTime - lastSwitchTime > 3000) {
    lastSwitchTime = currentTime;
    useTwo = !useTwo;
    
    if (useTwo) {
      Serial.println("Switching to Mode TWO");
      two();
    } else {
      Serial.println("Switching to Mode ONE");
      one();
    }
  }
}
